// Generated by view binder compiler. Do not edit!
package com.example.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FullPersonCardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView fullAddress;

  @NonNull
  public final TextView fullBirthday;

  @NonNull
  public final TextView fullEmail;

  @NonNull
  public final TextView fullFIO;

  @NonNull
  public final TextView fullNumber;

  @NonNull
  public final TextView fullPassword;

  @NonNull
  public final ImageView fullPhoto;

  private FullPersonCardBinding(@NonNull ConstraintLayout rootView, @NonNull TextView fullAddress,
      @NonNull TextView fullBirthday, @NonNull TextView fullEmail, @NonNull TextView fullFIO,
      @NonNull TextView fullNumber, @NonNull TextView fullPassword, @NonNull ImageView fullPhoto) {
    this.rootView = rootView;
    this.fullAddress = fullAddress;
    this.fullBirthday = fullBirthday;
    this.fullEmail = fullEmail;
    this.fullFIO = fullFIO;
    this.fullNumber = fullNumber;
    this.fullPassword = fullPassword;
    this.fullPhoto = fullPhoto;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FullPersonCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FullPersonCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.full_person_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FullPersonCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fullAddress;
      TextView fullAddress = ViewBindings.findChildViewById(rootView, id);
      if (fullAddress == null) {
        break missingId;
      }

      id = R.id.fullBirthday;
      TextView fullBirthday = ViewBindings.findChildViewById(rootView, id);
      if (fullBirthday == null) {
        break missingId;
      }

      id = R.id.fullEmail;
      TextView fullEmail = ViewBindings.findChildViewById(rootView, id);
      if (fullEmail == null) {
        break missingId;
      }

      id = R.id.fullFIO;
      TextView fullFIO = ViewBindings.findChildViewById(rootView, id);
      if (fullFIO == null) {
        break missingId;
      }

      id = R.id.fullNumber;
      TextView fullNumber = ViewBindings.findChildViewById(rootView, id);
      if (fullNumber == null) {
        break missingId;
      }

      id = R.id.fullPassword;
      TextView fullPassword = ViewBindings.findChildViewById(rootView, id);
      if (fullPassword == null) {
        break missingId;
      }

      id = R.id.fullPhoto;
      ImageView fullPhoto = ViewBindings.findChildViewById(rootView, id);
      if (fullPhoto == null) {
        break missingId;
      }

      return new FullPersonCardBinding((ConstraintLayout) rootView, fullAddress, fullBirthday,
          fullEmail, fullFIO, fullNumber, fullPassword, fullPhoto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
