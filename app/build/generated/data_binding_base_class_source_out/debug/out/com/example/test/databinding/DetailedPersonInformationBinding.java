// Generated by view binder compiler. Do not edit!
package com.example.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DetailedPersonInformationBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageButton addressForward;

  @NonNull
  public final View dividerAddress;

  @NonNull
  public final View dividerAge;

  @NonNull
  public final View dividerBirthday;

  @NonNull
  public final View dividerEmail;

  @NonNull
  public final View dividerFIO;

  @NonNull
  public final View dividerGender;

  @NonNull
  public final ImageButton emailForward;

  @NonNull
  public final TextView fullAddress;

  @NonNull
  public final TextView fullAddresslConst;

  @NonNull
  public final TextView fullAge;

  @NonNull
  public final TextView fullAgeConst;

  @NonNull
  public final TextView fullBirthday;

  @NonNull
  public final TextView fullBirthdaylConst;

  @NonNull
  public final TextView fullEmail;

  @NonNull
  public final TextView fullEmailConst;

  @NonNull
  public final TextView fullFIO;

  @NonNull
  public final TextView fullGender;

  @NonNull
  public final TextView fullGenderConst;

  @NonNull
  public final TextView fullNameConst;

  @NonNull
  public final TextView fullNumber;

  @NonNull
  public final TextView fullPhoneConst;

  @NonNull
  public final ImageView fullPhoto;

  @NonNull
  public final ImageButton numberForward;

  private DetailedPersonInformationBinding(@NonNull ScrollView rootView,
      @NonNull ImageButton addressForward, @NonNull View dividerAddress, @NonNull View dividerAge,
      @NonNull View dividerBirthday, @NonNull View dividerEmail, @NonNull View dividerFIO,
      @NonNull View dividerGender, @NonNull ImageButton emailForward, @NonNull TextView fullAddress,
      @NonNull TextView fullAddresslConst, @NonNull TextView fullAge,
      @NonNull TextView fullAgeConst, @NonNull TextView fullBirthday,
      @NonNull TextView fullBirthdaylConst, @NonNull TextView fullEmail,
      @NonNull TextView fullEmailConst, @NonNull TextView fullFIO, @NonNull TextView fullGender,
      @NonNull TextView fullGenderConst, @NonNull TextView fullNameConst,
      @NonNull TextView fullNumber, @NonNull TextView fullPhoneConst, @NonNull ImageView fullPhoto,
      @NonNull ImageButton numberForward) {
    this.rootView = rootView;
    this.addressForward = addressForward;
    this.dividerAddress = dividerAddress;
    this.dividerAge = dividerAge;
    this.dividerBirthday = dividerBirthday;
    this.dividerEmail = dividerEmail;
    this.dividerFIO = dividerFIO;
    this.dividerGender = dividerGender;
    this.emailForward = emailForward;
    this.fullAddress = fullAddress;
    this.fullAddresslConst = fullAddresslConst;
    this.fullAge = fullAge;
    this.fullAgeConst = fullAgeConst;
    this.fullBirthday = fullBirthday;
    this.fullBirthdaylConst = fullBirthdaylConst;
    this.fullEmail = fullEmail;
    this.fullEmailConst = fullEmailConst;
    this.fullFIO = fullFIO;
    this.fullGender = fullGender;
    this.fullGenderConst = fullGenderConst;
    this.fullNameConst = fullNameConst;
    this.fullNumber = fullNumber;
    this.fullPhoneConst = fullPhoneConst;
    this.fullPhoto = fullPhoto;
    this.numberForward = numberForward;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailedPersonInformationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailedPersonInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.detailed_person_information, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailedPersonInformationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressForward;
      ImageButton addressForward = ViewBindings.findChildViewById(rootView, id);
      if (addressForward == null) {
        break missingId;
      }

      id = R.id.dividerAddress;
      View dividerAddress = ViewBindings.findChildViewById(rootView, id);
      if (dividerAddress == null) {
        break missingId;
      }

      id = R.id.dividerAge;
      View dividerAge = ViewBindings.findChildViewById(rootView, id);
      if (dividerAge == null) {
        break missingId;
      }

      id = R.id.dividerBirthday;
      View dividerBirthday = ViewBindings.findChildViewById(rootView, id);
      if (dividerBirthday == null) {
        break missingId;
      }

      id = R.id.dividerEmail;
      View dividerEmail = ViewBindings.findChildViewById(rootView, id);
      if (dividerEmail == null) {
        break missingId;
      }

      id = R.id.dividerFIO;
      View dividerFIO = ViewBindings.findChildViewById(rootView, id);
      if (dividerFIO == null) {
        break missingId;
      }

      id = R.id.dividerGender;
      View dividerGender = ViewBindings.findChildViewById(rootView, id);
      if (dividerGender == null) {
        break missingId;
      }

      id = R.id.emailForward;
      ImageButton emailForward = ViewBindings.findChildViewById(rootView, id);
      if (emailForward == null) {
        break missingId;
      }

      id = R.id.fullAddress;
      TextView fullAddress = ViewBindings.findChildViewById(rootView, id);
      if (fullAddress == null) {
        break missingId;
      }

      id = R.id.fullAddresslConst;
      TextView fullAddresslConst = ViewBindings.findChildViewById(rootView, id);
      if (fullAddresslConst == null) {
        break missingId;
      }

      id = R.id.fullAge;
      TextView fullAge = ViewBindings.findChildViewById(rootView, id);
      if (fullAge == null) {
        break missingId;
      }

      id = R.id.fullAgeConst;
      TextView fullAgeConst = ViewBindings.findChildViewById(rootView, id);
      if (fullAgeConst == null) {
        break missingId;
      }

      id = R.id.fullBirthday;
      TextView fullBirthday = ViewBindings.findChildViewById(rootView, id);
      if (fullBirthday == null) {
        break missingId;
      }

      id = R.id.fullBirthdaylConst;
      TextView fullBirthdaylConst = ViewBindings.findChildViewById(rootView, id);
      if (fullBirthdaylConst == null) {
        break missingId;
      }

      id = R.id.fullEmail;
      TextView fullEmail = ViewBindings.findChildViewById(rootView, id);
      if (fullEmail == null) {
        break missingId;
      }

      id = R.id.fullEmailConst;
      TextView fullEmailConst = ViewBindings.findChildViewById(rootView, id);
      if (fullEmailConst == null) {
        break missingId;
      }

      id = R.id.fullFIO;
      TextView fullFIO = ViewBindings.findChildViewById(rootView, id);
      if (fullFIO == null) {
        break missingId;
      }

      id = R.id.fullGender;
      TextView fullGender = ViewBindings.findChildViewById(rootView, id);
      if (fullGender == null) {
        break missingId;
      }

      id = R.id.fullGenderConst;
      TextView fullGenderConst = ViewBindings.findChildViewById(rootView, id);
      if (fullGenderConst == null) {
        break missingId;
      }

      id = R.id.fullNameConst;
      TextView fullNameConst = ViewBindings.findChildViewById(rootView, id);
      if (fullNameConst == null) {
        break missingId;
      }

      id = R.id.fullNumber;
      TextView fullNumber = ViewBindings.findChildViewById(rootView, id);
      if (fullNumber == null) {
        break missingId;
      }

      id = R.id.fullPhoneConst;
      TextView fullPhoneConst = ViewBindings.findChildViewById(rootView, id);
      if (fullPhoneConst == null) {
        break missingId;
      }

      id = R.id.fullPhoto;
      ImageView fullPhoto = ViewBindings.findChildViewById(rootView, id);
      if (fullPhoto == null) {
        break missingId;
      }

      id = R.id.numberForward;
      ImageButton numberForward = ViewBindings.findChildViewById(rootView, id);
      if (numberForward == null) {
        break missingId;
      }

      return new DetailedPersonInformationBinding((ScrollView) rootView, addressForward,
          dividerAddress, dividerAge, dividerBirthday, dividerEmail, dividerFIO, dividerGender,
          emailForward, fullAddress, fullAddresslConst, fullAge, fullAgeConst, fullBirthday,
          fullBirthdaylConst, fullEmail, fullEmailConst, fullFIO, fullGender, fullGenderConst,
          fullNameConst, fullNumber, fullPhoneConst, fullPhoto, numberForward);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
